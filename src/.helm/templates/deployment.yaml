apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  annotations:
  {{- range $key, $value := .Values.annotations }}
    {{ $key }}: {{ $value }}
  {{- end }}
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount | default .Values.global.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Release.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.command }}
          command: {{ .Values.command }}
          {{- end }}
          {{- if .Values.args }}
          args: {{ . .args }}
          {{- end }}
          ports:
            {{- range .Values.services -}}
            {{- range $port:= .specs}}
            - name: {{ .name }}
              containerPort: {{ .targetPort | default .port}}
              protocol: {{ .protocol | default "TCP" }}
            {{- end }}
            {{- end }}
          {{- if (merge .Values.global.environment .Values.environment) }}
          env:
          {{- range $name, $value := merge .Values.global.environment .Values.environment}}
          - name: {{ $name | quote}}
            value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.vault.enabled }}
          {{- $vaultSecretName := .Values.vault.secretName }}
          {{- range $key, $val := .Values.vault.variables }}
          - name: {{ $key | quote }}
            valueFrom:
              secretKeyRef:
                name: {{$vaultSecretName | quote}}
                key: {{ $val | quote }}
          {{- end }}
          {{- end }}
          {{- if .Values.volumes.enabled }}
          volumeMounts:
            {{- range $conf := .Values.volumes.configMaps }}
            - mountPath: {{ $conf.mountPath }}
              name: {{ $conf.name }}-volume
            {{- end }}
            {{- if .Values.volumes.pvc.enabled }}
            - mountPath: {{ .Values.volumes.pvc.mountPath }}
              name: {{ .Values.volumes.pvc.existing_claim | default .Values.volumes.pvc.name }}-volume
            {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.volumes.enabled }}
      volumes:
        {{- range $conf := .Values.volumes.configMaps }}
        - name: {{ $conf.name }}-volume
          configMap:
            name: {{ $conf.name }}
      {{- end }}
      {{- if .Values.volumes.pvc.enabled}}
        - name: {{ .Values.volumes.pvc.existing_claim | default .Values.volumes.pvc.name }}-volume
          persistentVolumeClaim:
            claimName: {{ .Values.volumes.pvc.existing_claim | default .Values.volumes.pvc.name }}
      {{- end}}
      {{- end }}
