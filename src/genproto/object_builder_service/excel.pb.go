// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: excel.proto

package object_builder_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExcelReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ExcelReadRequest) Reset() {
	*x = ExcelReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExcelReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExcelReadRequest) ProtoMessage() {}

func (x *ExcelReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_excel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExcelReadRequest.ProtoReflect.Descriptor instead.
func (*ExcelReadRequest) Descriptor() ([]byte, []int) {
	return file_excel_proto_rawDescGZIP(), []int{0}
}

func (x *ExcelReadRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ExcelToDbRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TableSlug string           `protobuf:"bytes,2,opt,name=table_slug,json=tableSlug,proto3" json:"table_slug,omitempty"`
	Data      *structpb.Struct `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ExcelToDbRequest) Reset() {
	*x = ExcelToDbRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExcelToDbRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExcelToDbRequest) ProtoMessage() {}

func (x *ExcelToDbRequest) ProtoReflect() protoreflect.Message {
	mi := &file_excel_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExcelToDbRequest.ProtoReflect.Descriptor instead.
func (*ExcelToDbRequest) Descriptor() ([]byte, []int) {
	return file_excel_proto_rawDescGZIP(), []int{1}
}

func (x *ExcelToDbRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExcelToDbRequest) GetTableSlug() string {
	if x != nil {
		return x.TableSlug
	}
	return ""
}

func (x *ExcelToDbRequest) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type ExcelToDbResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExcelToDbResponse) Reset() {
	*x = ExcelToDbResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExcelToDbResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExcelToDbResponse) ProtoMessage() {}

func (x *ExcelToDbResponse) ProtoReflect() protoreflect.Message {
	mi := &file_excel_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExcelToDbResponse.ProtoReflect.Descriptor instead.
func (*ExcelToDbResponse) Descriptor() ([]byte, []int) {
	return file_excel_proto_rawDescGZIP(), []int{2}
}

type ExcelReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows []string `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *ExcelReadResponse) Reset() {
	*x = ExcelReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExcelReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExcelReadResponse) ProtoMessage() {}

func (x *ExcelReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_excel_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExcelReadResponse.ProtoReflect.Descriptor instead.
func (*ExcelReadResponse) Descriptor() ([]byte, []int) {
	return file_excel_proto_rawDescGZIP(), []int{3}
}

func (x *ExcelReadResponse) GetRows() []string {
	if x != nil {
		return x.Rows
	}
	return nil
}

type Row struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column []string `protobuf:"bytes,1,rep,name=column,proto3" json:"column,omitempty"`
}

func (x *Row) Reset() {
	*x = Row{}
	if protoimpl.UnsafeEnabled {
		mi := &file_excel_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Row) ProtoMessage() {}

func (x *Row) ProtoReflect() protoreflect.Message {
	mi := &file_excel_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Row.ProtoReflect.Descriptor instead.
func (*Row) Descriptor() ([]byte, []int) {
	return file_excel_proto_rawDescGZIP(), []int{4}
}

func (x *Row) GetColumn() []string {
	if x != nil {
		return x.Column
	}
	return nil
}

var File_excel_proto protoreflect.FileDescriptor

var file_excel_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x65, 0x78, 0x63, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x22, 0x0a, 0x10, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6e, 0x0a, 0x10, 0x45, 0x78, 0x63, 0x65, 0x6c,
	0x54, 0x6f, 0x44, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x13, 0x0a, 0x11, 0x45, 0x78, 0x63, 0x65, 0x6c,
	0x54, 0x6f, 0x44, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x0a, 0x11,
	0x45, 0x78, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x1d, 0x0a, 0x03, 0x52, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x32, 0xd6, 0x01, 0x0a, 0x0c, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x09, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x52, 0x65,
	0x61, 0x64, 0x12, 0x28, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x63, 0x65,
	0x6c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x09, 0x45, 0x78, 0x63,
	0x65, 0x6c, 0x54, 0x6f, 0x44, 0x62, 0x12, 0x28, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x45, 0x78, 0x63, 0x65, 0x6c, 0x54, 0x6f, 0x44, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x54,
	0x6f, 0x44, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x21, 0x5a,
	0x1f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_excel_proto_rawDescOnce sync.Once
	file_excel_proto_rawDescData = file_excel_proto_rawDesc
)

func file_excel_proto_rawDescGZIP() []byte {
	file_excel_proto_rawDescOnce.Do(func() {
		file_excel_proto_rawDescData = protoimpl.X.CompressGZIP(file_excel_proto_rawDescData)
	})
	return file_excel_proto_rawDescData
}

var file_excel_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_excel_proto_goTypes = []interface{}{
	(*ExcelReadRequest)(nil),  // 0: object_builder_service.ExcelReadRequest
	(*ExcelToDbRequest)(nil),  // 1: object_builder_service.ExcelToDbRequest
	(*ExcelToDbResponse)(nil), // 2: object_builder_service.ExcelToDbResponse
	(*ExcelReadResponse)(nil), // 3: object_builder_service.ExcelReadResponse
	(*Row)(nil),               // 4: object_builder_service.Row
	(*structpb.Struct)(nil),   // 5: google.protobuf.Struct
}
var file_excel_proto_depIdxs = []int32{
	5, // 0: object_builder_service.ExcelToDbRequest.data:type_name -> google.protobuf.Struct
	0, // 1: object_builder_service.ExcelService.ExcelRead:input_type -> object_builder_service.ExcelReadRequest
	1, // 2: object_builder_service.ExcelService.ExcelToDb:input_type -> object_builder_service.ExcelToDbRequest
	3, // 3: object_builder_service.ExcelService.ExcelRead:output_type -> object_builder_service.ExcelReadResponse
	2, // 4: object_builder_service.ExcelService.ExcelToDb:output_type -> object_builder_service.ExcelToDbResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_excel_proto_init() }
func file_excel_proto_init() {
	if File_excel_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_excel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExcelReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_excel_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExcelToDbRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_excel_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExcelToDbResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_excel_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExcelReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_excel_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Row); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_excel_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_excel_proto_goTypes,
		DependencyIndexes: file_excel_proto_depIdxs,
		MessageInfos:      file_excel_proto_msgTypes,
	}.Build()
	File_excel_proto = out.File
	file_excel_proto_rawDesc = nil
	file_excel_proto_goTypes = nil
	file_excel_proto_depIdxs = nil
}
