// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.8
// source: pdf.proto

package object_builder_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreatePdfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableSlug string   `protobuf:"bytes,1,opt,name=table_slug,json=tableSlug,proto3" json:"table_slug,omitempty"`
	Html      string   `protobuf:"bytes,2,opt,name=html,proto3" json:"html,omitempty"`
	Title     string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Size      []string `protobuf:"bytes,4,rep,name=size,proto3" json:"size,omitempty"`
}

func (x *CreatePdfRequest) Reset() {
	*x = CreatePdfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pdf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePdfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePdfRequest) ProtoMessage() {}

func (x *CreatePdfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pdf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePdfRequest.ProtoReflect.Descriptor instead.
func (*CreatePdfRequest) Descriptor() ([]byte, []int) {
	return file_pdf_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePdfRequest) GetTableSlug() string {
	if x != nil {
		return x.TableSlug
	}
	return ""
}

func (x *CreatePdfRequest) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

func (x *CreatePdfRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreatePdfRequest) GetSize() []string {
	if x != nil {
		return x.Size
	}
	return nil
}

type Pdf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TableSlug string   `protobuf:"bytes,2,opt,name=table_slug,json=tableSlug,proto3" json:"table_slug,omitempty"`
	Html      string   `protobuf:"bytes,3,opt,name=html,proto3" json:"html,omitempty"`
	Title     string   `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Size      []string `protobuf:"bytes,5,rep,name=size,proto3" json:"size,omitempty"`
}

func (x *Pdf) Reset() {
	*x = Pdf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pdf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pdf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pdf) ProtoMessage() {}

func (x *Pdf) ProtoReflect() protoreflect.Message {
	mi := &file_pdf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pdf.ProtoReflect.Descriptor instead.
func (*Pdf) Descriptor() ([]byte, []int) {
	return file_pdf_proto_rawDescGZIP(), []int{1}
}

func (x *Pdf) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Pdf) GetTableSlug() string {
	if x != nil {
		return x.TableSlug
	}
	return ""
}

func (x *Pdf) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

func (x *Pdf) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Pdf) GetSize() []string {
	if x != nil {
		return x.Size
	}
	return nil
}

type GetAllPdfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pdfs  []*Pdf `protobuf:"bytes,1,rep,name=pdfs,proto3" json:"pdfs,omitempty"`
	Count int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetAllPdfResponse) Reset() {
	*x = GetAllPdfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pdf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPdfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPdfResponse) ProtoMessage() {}

func (x *GetAllPdfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pdf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPdfResponse.ProtoReflect.Descriptor instead.
func (*GetAllPdfResponse) Descriptor() ([]byte, []int) {
	return file_pdf_proto_rawDescGZIP(), []int{2}
}

func (x *GetAllPdfResponse) GetPdfs() []*Pdf {
	if x != nil {
		return x.Pdfs
	}
	return nil
}

func (x *GetAllPdfResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetAllPdfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableSlug string `protobuf:"bytes,1,opt,name=table_slug,json=tableSlug,proto3" json:"table_slug,omitempty"`
}

func (x *GetAllPdfRequest) Reset() {
	*x = GetAllPdfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pdf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPdfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPdfRequest) ProtoMessage() {}

func (x *GetAllPdfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pdf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPdfRequest.ProtoReflect.Descriptor instead.
func (*GetAllPdfRequest) Descriptor() ([]byte, []int) {
	return file_pdf_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllPdfRequest) GetTableSlug() string {
	if x != nil {
		return x.TableSlug
	}
	return ""
}

type PdfPrimaryKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PdfPrimaryKey) Reset() {
	*x = PdfPrimaryKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pdf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PdfPrimaryKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PdfPrimaryKey) ProtoMessage() {}

func (x *PdfPrimaryKey) ProtoReflect() protoreflect.Message {
	mi := &file_pdf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PdfPrimaryKey.ProtoReflect.Descriptor instead.
func (*PdfPrimaryKey) Descriptor() ([]byte, []int) {
	return file_pdf_proto_rawDescGZIP(), []int{4}
}

func (x *PdfPrimaryKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_pdf_proto protoreflect.FileDescriptor

var file_pdf_proto_rawDesc = []byte{
	0x0a, 0x09, 0x70, 0x64, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x6f, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x64, 0x66, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x6c,
	0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x6c, 0x75, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x22, 0x72, 0x0a, 0x03, 0x50, 0x64, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x5a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50,
	0x64, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x70, 0x64,
	0x66, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x64, 0x66, 0x52, 0x04, 0x70, 0x64, 0x66, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x31, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x64, 0x66, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73,
	0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x6c, 0x75, 0x67, 0x22, 0x1f, 0x0a, 0x0d, 0x50, 0x64, 0x66, 0x50, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0xa0, 0x03, 0x0a, 0x0a, 0x50, 0x64, 0x66, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x28,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x64,
	0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x64, 0x66, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x28, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x50, 0x64, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x64, 0x66, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x25, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x64, 0x66, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x1a, 0x1b, 0x2e,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x64, 0x66, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x64, 0x66, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a,
	0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x64, 0x66, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x21, 0x5a, 0x1f, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_pdf_proto_rawDescOnce sync.Once
	file_pdf_proto_rawDescData = file_pdf_proto_rawDesc
)

func file_pdf_proto_rawDescGZIP() []byte {
	file_pdf_proto_rawDescOnce.Do(func() {
		file_pdf_proto_rawDescData = protoimpl.X.CompressGZIP(file_pdf_proto_rawDescData)
	})
	return file_pdf_proto_rawDescData
}

var file_pdf_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pdf_proto_goTypes = []interface{}{
	(*CreatePdfRequest)(nil),  // 0: object_builder_service.CreatePdfRequest
	(*Pdf)(nil),               // 1: object_builder_service.Pdf
	(*GetAllPdfResponse)(nil), // 2: object_builder_service.GetAllPdfResponse
	(*GetAllPdfRequest)(nil),  // 3: object_builder_service.GetAllPdfRequest
	(*PdfPrimaryKey)(nil),     // 4: object_builder_service.PdfPrimaryKey
	(*emptypb.Empty)(nil),     // 5: google.protobuf.Empty
}
var file_pdf_proto_depIdxs = []int32{
	1, // 0: object_builder_service.GetAllPdfResponse.pdfs:type_name -> object_builder_service.Pdf
	0, // 1: object_builder_service.PdfService.Create:input_type -> object_builder_service.CreatePdfRequest
	3, // 2: object_builder_service.PdfService.GetList:input_type -> object_builder_service.GetAllPdfRequest
	4, // 3: object_builder_service.PdfService.GetSingle:input_type -> object_builder_service.PdfPrimaryKey
	1, // 4: object_builder_service.PdfService.Update:input_type -> object_builder_service.Pdf
	4, // 5: object_builder_service.PdfService.Delete:input_type -> object_builder_service.PdfPrimaryKey
	1, // 6: object_builder_service.PdfService.Create:output_type -> object_builder_service.Pdf
	2, // 7: object_builder_service.PdfService.GetList:output_type -> object_builder_service.GetAllPdfResponse
	1, // 8: object_builder_service.PdfService.GetSingle:output_type -> object_builder_service.Pdf
	5, // 9: object_builder_service.PdfService.Update:output_type -> google.protobuf.Empty
	5, // 10: object_builder_service.PdfService.Delete:output_type -> google.protobuf.Empty
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pdf_proto_init() }
func file_pdf_proto_init() {
	if File_pdf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pdf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePdfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pdf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pdf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pdf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPdfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pdf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPdfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pdf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PdfPrimaryKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pdf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pdf_proto_goTypes,
		DependencyIndexes: file_pdf_proto_depIdxs,
		MessageInfos:      file_pdf_proto_msgTypes,
	}.Build()
	File_pdf_proto = out.File
	file_pdf_proto_rawDesc = nil
	file_pdf_proto_goTypes = nil
	file_pdf_proto_depIdxs = nil
}
