// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.4
// source: click.proto

package payment_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ClickServiceClient is the client API for ClickService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ClickServiceClient interface {
	GenerateClickLink(ctx context.Context, in *ClickLinkRequest, opts ...grpc.CallOption) (*ClickLinkResponse, error)
}

type clickServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewClickServiceClient(cc grpc.ClientConnInterface) ClickServiceClient {
	return &clickServiceClient{cc}
}

func (c *clickServiceClient) GenerateClickLink(ctx context.Context, in *ClickLinkRequest, opts ...grpc.CallOption) (*ClickLinkResponse, error) {
	out := new(ClickLinkResponse)
	err := c.cc.Invoke(ctx, "/payments.ClickService/GenerateClickLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClickServiceServer is the server API for ClickService service.
// All implementations must embed UnimplementedClickServiceServer
// for forward compatibility
type ClickServiceServer interface {
	GenerateClickLink(context.Context, *ClickLinkRequest) (*ClickLinkResponse, error)
	mustEmbedUnimplementedClickServiceServer()
}

// UnimplementedClickServiceServer must be embedded to have forward compatible implementations.
type UnimplementedClickServiceServer struct {
}

func (UnimplementedClickServiceServer) GenerateClickLink(context.Context, *ClickLinkRequest) (*ClickLinkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateClickLink not implemented")
}
func (UnimplementedClickServiceServer) mustEmbedUnimplementedClickServiceServer() {}

// UnsafeClickServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ClickServiceServer will
// result in compilation errors.
type UnsafeClickServiceServer interface {
	mustEmbedUnimplementedClickServiceServer()
}

func RegisterClickServiceServer(s grpc.ServiceRegistrar, srv ClickServiceServer) {
	s.RegisterService(&ClickService_ServiceDesc, srv)
}

func _ClickService_GenerateClickLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClickLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClickServiceServer).GenerateClickLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payments.ClickService/GenerateClickLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClickServiceServer).GenerateClickLink(ctx, req.(*ClickLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ClickService_ServiceDesc is the grpc.ServiceDesc for ClickService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ClickService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "payments.ClickService",
	HandlerType: (*ClickServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenerateClickLink",
			Handler:    _ClickService_GenerateClickLink_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "click.proto",
}
