// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: empowermentMongo.proto

package mongo_document_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmpowermentMongo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmpowermentId  string                  `protobuf:"bytes,1,opt,name=EmpowermentId,proto3" json:"EmpowermentId,omitempty"`
	EmpowermentDoc *EmpowermentDoc         `protobuf:"bytes,2,opt,name=EmpowermentDoc,proto3" json:"EmpowermentDoc,omitempty"`
	ContractDoc    *ContractDoc            `protobuf:"bytes,3,opt,name=ContractDoc,proto3" json:"ContractDoc,omitempty"`
	Agent          *AgentEmpowerment       `protobuf:"bytes,4,opt,name=Agent,proto3" json:"Agent,omitempty"`
	SellerTin      string                  `protobuf:"bytes,5,opt,name=SellerTin,proto3" json:"SellerTin,omitempty"`
	BuyerTin       string                  `protobuf:"bytes,6,opt,name=BuyerTin,proto3" json:"BuyerTin,omitempty"`
	Seller         *CompanyEmpowerment     `protobuf:"bytes,7,opt,name=Seller,proto3" json:"Seller,omitempty"`
	Buyer          *CompanyEmpowerment     `protobuf:"bytes,8,opt,name=Buyer,proto3" json:"Buyer,omitempty"`
	ProductList    *ProductListEmpowerment `protobuf:"bytes,9,opt,name=ProductList,proto3" json:"ProductList,omitempty"`
}

func (x *EmpowermentMongo) Reset() {
	*x = EmpowermentMongo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_empowermentMongo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmpowermentMongo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmpowermentMongo) ProtoMessage() {}

func (x *EmpowermentMongo) ProtoReflect() protoreflect.Message {
	mi := &file_empowermentMongo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmpowermentMongo.ProtoReflect.Descriptor instead.
func (*EmpowermentMongo) Descriptor() ([]byte, []int) {
	return file_empowermentMongo_proto_rawDescGZIP(), []int{0}
}

func (x *EmpowermentMongo) GetEmpowermentId() string {
	if x != nil {
		return x.EmpowermentId
	}
	return ""
}

func (x *EmpowermentMongo) GetEmpowermentDoc() *EmpowermentDoc {
	if x != nil {
		return x.EmpowermentDoc
	}
	return nil
}

func (x *EmpowermentMongo) GetContractDoc() *ContractDoc {
	if x != nil {
		return x.ContractDoc
	}
	return nil
}

func (x *EmpowermentMongo) GetAgent() *AgentEmpowerment {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *EmpowermentMongo) GetSellerTin() string {
	if x != nil {
		return x.SellerTin
	}
	return ""
}

func (x *EmpowermentMongo) GetBuyerTin() string {
	if x != nil {
		return x.BuyerTin
	}
	return ""
}

func (x *EmpowermentMongo) GetSeller() *CompanyEmpowerment {
	if x != nil {
		return x.Seller
	}
	return nil
}

func (x *EmpowermentMongo) GetBuyer() *CompanyEmpowerment {
	if x != nil {
		return x.Buyer
	}
	return nil
}

func (x *EmpowermentMongo) GetProductList() *ProductListEmpowerment {
	if x != nil {
		return x.ProductList
	}
	return nil
}

type Empowerment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Empowerment *EmpowermentMongo `protobuf:"bytes,1,opt,name=Empowerment,proto3" json:"Empowerment,omitempty"`
	Status      string            `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
	Sign        string            `protobuf:"bytes,3,opt,name=Sign,proto3" json:"Sign,omitempty"`
	CreatedAt   string            `protobuf:"bytes,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt   string            `protobuf:"bytes,5,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	PdfUrlUz    string            `protobuf:"bytes,6,opt,name=PdfUrlUz,proto3" json:"PdfUrlUz,omitempty"`
	PdfUrlRu    string            `protobuf:"bytes,7,opt,name=PdfUrlRu,proto3" json:"PdfUrlRu,omitempty"`
	PageStatus  string            `protobuf:"bytes,8,opt,name=PageStatus,proto3" json:"PageStatus,omitempty"`
	HtmlUz      string            `protobuf:"bytes,9,opt,name=HtmlUz,proto3" json:"HtmlUz,omitempty"`
	HtmlRu      string            `protobuf:"bytes,10,opt,name=HtmlRu,proto3" json:"HtmlRu,omitempty"`
}

func (x *Empowerment) Reset() {
	*x = Empowerment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_empowermentMongo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empowerment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empowerment) ProtoMessage() {}

func (x *Empowerment) ProtoReflect() protoreflect.Message {
	mi := &file_empowermentMongo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empowerment.ProtoReflect.Descriptor instead.
func (*Empowerment) Descriptor() ([]byte, []int) {
	return file_empowermentMongo_proto_rawDescGZIP(), []int{1}
}

func (x *Empowerment) GetEmpowerment() *EmpowermentMongo {
	if x != nil {
		return x.Empowerment
	}
	return nil
}

func (x *Empowerment) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Empowerment) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *Empowerment) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Empowerment) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Empowerment) GetPdfUrlUz() string {
	if x != nil {
		return x.PdfUrlUz
	}
	return ""
}

func (x *Empowerment) GetPdfUrlRu() string {
	if x != nil {
		return x.PdfUrlRu
	}
	return ""
}

func (x *Empowerment) GetPageStatus() string {
	if x != nil {
		return x.PageStatus
	}
	return ""
}

func (x *Empowerment) GetHtmlUz() string {
	if x != nil {
		return x.HtmlUz
	}
	return ""
}

func (x *Empowerment) GetHtmlRu() string {
	if x != nil {
		return x.HtmlRu
	}
	return ""
}

type EmpowermentDoc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmpowermentNo           string `protobuf:"bytes,1,opt,name=EmpowermentNo,proto3" json:"EmpowermentNo,omitempty"`
	EmpowermentDateOfIssue  string `protobuf:"bytes,2,opt,name=EmpowermentDateOfIssue,proto3" json:"EmpowermentDateOfIssue,omitempty"`
	EmpowermentDateOfExpire string `protobuf:"bytes,3,opt,name=EmpowermentDateOfExpire,proto3" json:"EmpowermentDateOfExpire,omitempty"`
}

func (x *EmpowermentDoc) Reset() {
	*x = EmpowermentDoc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_empowermentMongo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmpowermentDoc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmpowermentDoc) ProtoMessage() {}

func (x *EmpowermentDoc) ProtoReflect() protoreflect.Message {
	mi := &file_empowermentMongo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmpowermentDoc.ProtoReflect.Descriptor instead.
func (*EmpowermentDoc) Descriptor() ([]byte, []int) {
	return file_empowermentMongo_proto_rawDescGZIP(), []int{2}
}

func (x *EmpowermentDoc) GetEmpowermentNo() string {
	if x != nil {
		return x.EmpowermentNo
	}
	return ""
}

func (x *EmpowermentDoc) GetEmpowermentDateOfIssue() string {
	if x != nil {
		return x.EmpowermentDateOfIssue
	}
	return ""
}

func (x *EmpowermentDoc) GetEmpowermentDateOfExpire() string {
	if x != nil {
		return x.EmpowermentDateOfExpire
	}
	return ""
}

type AgentEmpowerment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentEmpowermentId string               `protobuf:"bytes,1,opt,name=AgentEmpowermentId,proto3" json:"AgentEmpowermentId,omitempty"`
	AgentTin           string               `protobuf:"bytes,2,opt,name=AgentTin,proto3" json:"AgentTin,omitempty"`
	JobTitle           string               `protobuf:"bytes,3,opt,name=JobTitle,proto3" json:"JobTitle,omitempty"`
	Fio                string               `protobuf:"bytes,4,opt,name=Fio,proto3" json:"Fio,omitempty"`
	Passport           *PassportEmpowerment `protobuf:"bytes,5,opt,name=Passport,proto3" json:"Passport,omitempty"`
}

func (x *AgentEmpowerment) Reset() {
	*x = AgentEmpowerment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_empowermentMongo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentEmpowerment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentEmpowerment) ProtoMessage() {}

func (x *AgentEmpowerment) ProtoReflect() protoreflect.Message {
	mi := &file_empowermentMongo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentEmpowerment.ProtoReflect.Descriptor instead.
func (*AgentEmpowerment) Descriptor() ([]byte, []int) {
	return file_empowermentMongo_proto_rawDescGZIP(), []int{3}
}

func (x *AgentEmpowerment) GetAgentEmpowermentId() string {
	if x != nil {
		return x.AgentEmpowermentId
	}
	return ""
}

func (x *AgentEmpowerment) GetAgentTin() string {
	if x != nil {
		return x.AgentTin
	}
	return ""
}

func (x *AgentEmpowerment) GetJobTitle() string {
	if x != nil {
		return x.JobTitle
	}
	return ""
}

func (x *AgentEmpowerment) GetFio() string {
	if x != nil {
		return x.Fio
	}
	return ""
}

func (x *AgentEmpowerment) GetPassport() *PassportEmpowerment {
	if x != nil {
		return x.Passport
	}
	return nil
}

type PassportEmpowerment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number      string `protobuf:"bytes,1,opt,name=Number,proto3" json:"Number,omitempty"`
	DateOfIssue string `protobuf:"bytes,2,opt,name=DateOfIssue,proto3" json:"DateOfIssue,omitempty"`
	IssuedBy    string `protobuf:"bytes,3,opt,name=IssuedBy,proto3" json:"IssuedBy,omitempty"`
}

func (x *PassportEmpowerment) Reset() {
	*x = PassportEmpowerment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_empowermentMongo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassportEmpowerment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassportEmpowerment) ProtoMessage() {}

func (x *PassportEmpowerment) ProtoReflect() protoreflect.Message {
	mi := &file_empowermentMongo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassportEmpowerment.ProtoReflect.Descriptor instead.
func (*PassportEmpowerment) Descriptor() ([]byte, []int) {
	return file_empowermentMongo_proto_rawDescGZIP(), []int{4}
}

func (x *PassportEmpowerment) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *PassportEmpowerment) GetDateOfIssue() string {
	if x != nil {
		return x.DateOfIssue
	}
	return ""
}

func (x *PassportEmpowerment) GetIssuedBy() string {
	if x != nil {
		return x.IssuedBy
	}
	return ""
}

type CompanyEmpowerment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Account    string `protobuf:"bytes,2,opt,name=Account,proto3" json:"Account,omitempty"`
	BankId     string `protobuf:"bytes,3,opt,name=BankId,proto3" json:"BankId,omitempty"`
	Address    string `protobuf:"bytes,4,opt,name=Address,proto3" json:"Address,omitempty"`
	Mobile     string `protobuf:"bytes,5,opt,name=Mobile,proto3" json:"Mobile,omitempty"`
	WorkPhone  string `protobuf:"bytes,6,opt,name=WorkPhone,proto3" json:"WorkPhone,omitempty"`
	Oked       string `protobuf:"bytes,7,opt,name=Oked,proto3" json:"Oked,omitempty"`
	DistrictID string `protobuf:"bytes,8,opt,name=DistrictID,proto3" json:"DistrictID,omitempty"`
	Director   string `protobuf:"bytes,9,opt,name=Director,proto3" json:"Director,omitempty"`
	Accountant string `protobuf:"bytes,10,opt,name=Accountant,proto3" json:"Accountant,omitempty"`
	BranchCode string `protobuf:"bytes,11,opt,name=BranchCode,proto3" json:"BranchCode,omitempty"`
	BranchName string `protobuf:"bytes,12,opt,name=BranchName,proto3" json:"BranchName,omitempty"`
	BankName   string `protobuf:"bytes,13,opt,name=BankName,proto3" json:"BankName,omitempty"`
}

func (x *CompanyEmpowerment) Reset() {
	*x = CompanyEmpowerment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_empowermentMongo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyEmpowerment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyEmpowerment) ProtoMessage() {}

func (x *CompanyEmpowerment) ProtoReflect() protoreflect.Message {
	mi := &file_empowermentMongo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyEmpowerment.ProtoReflect.Descriptor instead.
func (*CompanyEmpowerment) Descriptor() ([]byte, []int) {
	return file_empowermentMongo_proto_rawDescGZIP(), []int{5}
}

func (x *CompanyEmpowerment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CompanyEmpowerment) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CompanyEmpowerment) GetBankId() string {
	if x != nil {
		return x.BankId
	}
	return ""
}

func (x *CompanyEmpowerment) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CompanyEmpowerment) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *CompanyEmpowerment) GetWorkPhone() string {
	if x != nil {
		return x.WorkPhone
	}
	return ""
}

func (x *CompanyEmpowerment) GetOked() string {
	if x != nil {
		return x.Oked
	}
	return ""
}

func (x *CompanyEmpowerment) GetDistrictID() string {
	if x != nil {
		return x.DistrictID
	}
	return ""
}

func (x *CompanyEmpowerment) GetDirector() string {
	if x != nil {
		return x.Director
	}
	return ""
}

func (x *CompanyEmpowerment) GetAccountant() string {
	if x != nil {
		return x.Accountant
	}
	return ""
}

func (x *CompanyEmpowerment) GetBranchCode() string {
	if x != nil {
		return x.BranchCode
	}
	return ""
}

func (x *CompanyEmpowerment) GetBranchName() string {
	if x != nil {
		return x.BranchName
	}
	return ""
}

func (x *CompanyEmpowerment) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

type ProductListEmpowerment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmpowermentProductId string                `protobuf:"bytes,1,opt,name=EmpowermentProductId,proto3" json:"EmpowermentProductId,omitempty"`
	Tin                  string                `protobuf:"bytes,2,opt,name=Tin,proto3" json:"Tin,omitempty"`
	Products             []*ProductEmpowerment `protobuf:"bytes,3,rep,name=Products,proto3" json:"Products,omitempty"`
}

func (x *ProductListEmpowerment) Reset() {
	*x = ProductListEmpowerment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_empowermentMongo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductListEmpowerment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductListEmpowerment) ProtoMessage() {}

func (x *ProductListEmpowerment) ProtoReflect() protoreflect.Message {
	mi := &file_empowermentMongo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductListEmpowerment.ProtoReflect.Descriptor instead.
func (*ProductListEmpowerment) Descriptor() ([]byte, []int) {
	return file_empowermentMongo_proto_rawDescGZIP(), []int{6}
}

func (x *ProductListEmpowerment) GetEmpowermentProductId() string {
	if x != nil {
		return x.EmpowermentProductId
	}
	return ""
}

func (x *ProductListEmpowerment) GetTin() string {
	if x != nil {
		return x.Tin
	}
	return ""
}

func (x *ProductListEmpowerment) GetProducts() []*ProductEmpowerment {
	if x != nil {
		return x.Products
	}
	return nil
}

type ProductEmpowerment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrdNo              string `protobuf:"bytes,1,opt,name=OrdNo,proto3" json:"OrdNo,omitempty"`
	CatalogCode        string `protobuf:"bytes,2,opt,name=CatalogCode,proto3" json:"CatalogCode,omitempty"`
	CatalogName        string `protobuf:"bytes,3,opt,name=CatalogName,proto3" json:"CatalogName,omitempty"`
	BarCode            string `protobuf:"bytes,4,opt,name=BarCode,proto3" json:"BarCode,omitempty"`
	Name               string `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`
	MeasureId          string `protobuf:"bytes,6,opt,name=MeasureId,proto3" json:"MeasureId,omitempty"`
	Count              string `protobuf:"bytes,7,opt,name=Count,proto3" json:"Count,omitempty"`
	DeliverySum        string `protobuf:"bytes,8,opt,name=DeliverySum,proto3" json:"DeliverySum,omitempty"`
	VatRate            string `protobuf:"bytes,9,opt,name=VatRate,proto3" json:"VatRate,omitempty"`
	VatSum             string `protobuf:"bytes,10,opt,name=VatSum,proto3" json:"VatSum,omitempty"`
	DeliverySumWithVat string `protobuf:"bytes,11,opt,name=DeliverySumWithVat,proto3" json:"DeliverySumWithVat,omitempty"`
	WithoutVat         bool   `protobuf:"varint,12,opt,name=WithoutVat,proto3" json:"WithoutVat,omitempty"`
	MeasureName        string `protobuf:"bytes,13,opt,name=MeasureName,proto3" json:"MeasureName,omitempty"`
}

func (x *ProductEmpowerment) Reset() {
	*x = ProductEmpowerment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_empowermentMongo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductEmpowerment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductEmpowerment) ProtoMessage() {}

func (x *ProductEmpowerment) ProtoReflect() protoreflect.Message {
	mi := &file_empowermentMongo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductEmpowerment.ProtoReflect.Descriptor instead.
func (*ProductEmpowerment) Descriptor() ([]byte, []int) {
	return file_empowermentMongo_proto_rawDescGZIP(), []int{7}
}

func (x *ProductEmpowerment) GetOrdNo() string {
	if x != nil {
		return x.OrdNo
	}
	return ""
}

func (x *ProductEmpowerment) GetCatalogCode() string {
	if x != nil {
		return x.CatalogCode
	}
	return ""
}

func (x *ProductEmpowerment) GetCatalogName() string {
	if x != nil {
		return x.CatalogName
	}
	return ""
}

func (x *ProductEmpowerment) GetBarCode() string {
	if x != nil {
		return x.BarCode
	}
	return ""
}

func (x *ProductEmpowerment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductEmpowerment) GetMeasureId() string {
	if x != nil {
		return x.MeasureId
	}
	return ""
}

func (x *ProductEmpowerment) GetCount() string {
	if x != nil {
		return x.Count
	}
	return ""
}

func (x *ProductEmpowerment) GetDeliverySum() string {
	if x != nil {
		return x.DeliverySum
	}
	return ""
}

func (x *ProductEmpowerment) GetVatRate() string {
	if x != nil {
		return x.VatRate
	}
	return ""
}

func (x *ProductEmpowerment) GetVatSum() string {
	if x != nil {
		return x.VatSum
	}
	return ""
}

func (x *ProductEmpowerment) GetDeliverySumWithVat() string {
	if x != nil {
		return x.DeliverySumWithVat
	}
	return ""
}

func (x *ProductEmpowerment) GetWithoutVat() bool {
	if x != nil {
		return x.WithoutVat
	}
	return false
}

func (x *ProductEmpowerment) GetMeasureName() string {
	if x != nil {
		return x.MeasureName
	}
	return ""
}

var File_empowermentMongo_proto protoreflect.FileDescriptor

var file_empowermentMongo_proto_rawDesc = []byte{
	0x0a, 0x16, 0x65, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e,
	0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x6d,
	0x6f, 0x6e, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x04, 0x0a, 0x10, 0x45,
	0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x12,
	0x24, 0x0a, 0x0d, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x0e, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x6f, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x6f, 0x63, 0x52, 0x0e, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x6f, 0x63, 0x12, 0x45, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x44, 0x6f, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x6f, 0x6e,
	0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x44, 0x6f, 0x63, 0x52,
	0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x44, 0x6f, 0x63, 0x12, 0x3e, 0x0a, 0x05,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x6f,
	0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x54, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x54, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x75,
	0x79, 0x65, 0x72, 0x54, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x75,
	0x79, 0x65, 0x72, 0x54, 0x69, 0x6e, 0x12, 0x42, 0x0a, 0x06, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x06, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x05, 0x42, 0x75,
	0x79, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x6f, 0x6e, 0x67,
	0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x42, 0x75, 0x79, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x0b,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xc9,
	0x02, 0x0a, 0x0b, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4a,
	0x0a, 0x0b, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x52, 0x0b, 0x45,
	0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x64, 0x66, 0x55, 0x72, 0x6c, 0x55, 0x7a, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x64, 0x66, 0x55, 0x72, 0x6c, 0x55, 0x7a, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x64, 0x66, 0x55, 0x72, 0x6c, 0x52, 0x75, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x50, 0x64, 0x66, 0x55, 0x72, 0x6c, 0x52, 0x75, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61,
	0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x74,
	0x6d, 0x6c, 0x55, 0x7a, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x48, 0x74, 0x6d, 0x6c,
	0x55, 0x7a, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x74, 0x6d, 0x6c, 0x52, 0x75, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x48, 0x74, 0x6d, 0x6c, 0x52, 0x75, 0x22, 0xa8, 0x01, 0x0a, 0x0e, 0x45,
	0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x6f, 0x63, 0x12, 0x24, 0x0a,
	0x0d, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x12, 0x36, 0x0a, 0x16, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x49, 0x73, 0x73, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x45,
	0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x45, 0x6d,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x22, 0xd5, 0x01, 0x0a, 0x10, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x45,
	0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x45, 0x6d, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x54, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x54, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x6f, 0x62, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4a, 0x6f, 0x62, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x46, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x46, 0x69, 0x6f, 0x12, 0x47, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x6b, 0x0a,
	0x13, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x49, 0x73, 0x73, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x44, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x42, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x42, 0x79, 0x22, 0xf6, 0x02, 0x0a, 0x12, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x42, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x57, 0x6f, 0x72,
	0x6b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x57, 0x6f,
	0x72, 0x6b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x6b, 0x65, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4f, 0x6b, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x61, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x61, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x32,
	0x0a, 0x14, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x45, 0x6d,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x54, 0x69, 0x6e, 0x12, 0x46, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x96, 0x03, 0x0a,
	0x12, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x4f, 0x72, 0x64, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x42, 0x61, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x42, 0x61, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x75, 0x6d, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x75,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x61, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x56, 0x61, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x56,
	0x61, 0x74, 0x53, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x56, 0x61, 0x74,
	0x53, 0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53,
	0x75, 0x6d, 0x57, 0x69, 0x74, 0x68, 0x56, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x75, 0x6d, 0x57, 0x69, 0x74, 0x68,
	0x56, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x56, 0x61,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74,
	0x56, 0x61, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0xd2, 0x02, 0x0a, 0x12, 0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x06,
	0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x12, 0x23, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x45, 0x6d, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x6f,
	0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x4a, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x42, 0x79, 0x49, 0x64, 0x1a, 0x23, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x06, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42,
	0x79, 0x49, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5b, 0x0a,
	0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x2e,
	0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x21, 0x5a, 0x1f, 0x67, 0x65,
	0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_empowermentMongo_proto_rawDescOnce sync.Once
	file_empowermentMongo_proto_rawDescData = file_empowermentMongo_proto_rawDesc
)

func file_empowermentMongo_proto_rawDescGZIP() []byte {
	file_empowermentMongo_proto_rawDescOnce.Do(func() {
		file_empowermentMongo_proto_rawDescData = protoimpl.X.CompressGZIP(file_empowermentMongo_proto_rawDescData)
	})
	return file_empowermentMongo_proto_rawDescData
}

var file_empowermentMongo_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_empowermentMongo_proto_goTypes = []interface{}{
	(*EmpowermentMongo)(nil),       // 0: mongo_document_service.EmpowermentMongo
	(*Empowerment)(nil),            // 1: mongo_document_service.Empowerment
	(*EmpowermentDoc)(nil),         // 2: mongo_document_service.EmpowermentDoc
	(*AgentEmpowerment)(nil),       // 3: mongo_document_service.AgentEmpowerment
	(*PassportEmpowerment)(nil),    // 4: mongo_document_service.PassportEmpowerment
	(*CompanyEmpowerment)(nil),     // 5: mongo_document_service.CompanyEmpowerment
	(*ProductListEmpowerment)(nil), // 6: mongo_document_service.ProductListEmpowerment
	(*ProductEmpowerment)(nil),     // 7: mongo_document_service.ProductEmpowerment
	(*ContractDoc)(nil),            // 8: mongo_document_service.ContractDoc
	(*ById)(nil),                   // 9: mongo_document_service.ById
	(*UpdateStatusReq)(nil),        // 10: mongo_document_service.UpdateStatusReq
	(*TimeResp)(nil),               // 11: mongo_document_service.TimeResp
	(*emptypb.Empty)(nil),          // 12: google.protobuf.Empty
}
var file_empowermentMongo_proto_depIdxs = []int32{
	2,  // 0: mongo_document_service.EmpowermentMongo.EmpowermentDoc:type_name -> mongo_document_service.EmpowermentDoc
	8,  // 1: mongo_document_service.EmpowermentMongo.ContractDoc:type_name -> mongo_document_service.ContractDoc
	3,  // 2: mongo_document_service.EmpowermentMongo.Agent:type_name -> mongo_document_service.AgentEmpowerment
	5,  // 3: mongo_document_service.EmpowermentMongo.Seller:type_name -> mongo_document_service.CompanyEmpowerment
	5,  // 4: mongo_document_service.EmpowermentMongo.Buyer:type_name -> mongo_document_service.CompanyEmpowerment
	6,  // 5: mongo_document_service.EmpowermentMongo.ProductList:type_name -> mongo_document_service.ProductListEmpowerment
	0,  // 6: mongo_document_service.Empowerment.Empowerment:type_name -> mongo_document_service.EmpowermentMongo
	4,  // 7: mongo_document_service.AgentEmpowerment.Passport:type_name -> mongo_document_service.PassportEmpowerment
	7,  // 8: mongo_document_service.ProductListEmpowerment.Products:type_name -> mongo_document_service.ProductEmpowerment
	1,  // 9: mongo_document_service.EmpowermentService.Upsert:input_type -> mongo_document_service.Empowerment
	9,  // 10: mongo_document_service.EmpowermentService.Get:input_type -> mongo_document_service.ById
	9,  // 11: mongo_document_service.EmpowermentService.Delete:input_type -> mongo_document_service.ById
	10, // 12: mongo_document_service.EmpowermentService.UpdateStatus:input_type -> mongo_document_service.UpdateStatusReq
	11, // 13: mongo_document_service.EmpowermentService.Upsert:output_type -> mongo_document_service.TimeResp
	1,  // 14: mongo_document_service.EmpowermentService.Get:output_type -> mongo_document_service.Empowerment
	12, // 15: mongo_document_service.EmpowermentService.Delete:output_type -> google.protobuf.Empty
	11, // 16: mongo_document_service.EmpowermentService.UpdateStatus:output_type -> mongo_document_service.TimeResp
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_empowermentMongo_proto_init() }
func file_empowermentMongo_proto_init() {
	if File_empowermentMongo_proto != nil {
		return
	}
	file_mongo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_empowermentMongo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmpowermentMongo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_empowermentMongo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empowerment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_empowermentMongo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmpowermentDoc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_empowermentMongo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentEmpowerment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_empowermentMongo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassportEmpowerment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_empowermentMongo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyEmpowerment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_empowermentMongo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductListEmpowerment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_empowermentMongo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductEmpowerment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_empowermentMongo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_empowermentMongo_proto_goTypes,
		DependencyIndexes: file_empowermentMongo_proto_depIdxs,
		MessageInfos:      file_empowermentMongo_proto_msgTypes,
	}.Build()
	File_empowermentMongo_proto = out.File
	file_empowermentMongo_proto_rawDesc = nil
	file_empowermentMongo_proto_goTypes = nil
	file_empowermentMongo_proto_depIdxs = nil
}
