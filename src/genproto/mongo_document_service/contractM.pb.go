// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: contractM.proto

package mongo_document_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContractDocC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractName       string `protobuf:"bytes,1,opt,name=ContractName,proto3" json:"ContractName,omitempty"`
	ContractNo         string `protobuf:"bytes,2,opt,name=ContractNo,proto3" json:"ContractNo,omitempty"`
	ContractDate       string `protobuf:"bytes,3,opt,name=ContractDate,proto3" json:"ContractDate,omitempty"`
	ContractExpireDate string `protobuf:"bytes,4,opt,name=ContractExpireDate,proto3" json:"ContractExpireDate,omitempty"`
	ContractPlace      string `protobuf:"bytes,5,opt,name=ContractPlace,proto3" json:"ContractPlace,omitempty"`
}

func (x *ContractDocC) Reset() {
	*x = ContractDocC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contractM_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractDocC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractDocC) ProtoMessage() {}

func (x *ContractDocC) ProtoReflect() protoreflect.Message {
	mi := &file_contractM_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractDocC.ProtoReflect.Descriptor instead.
func (*ContractDocC) Descriptor() ([]byte, []int) {
	return file_contractM_proto_rawDescGZIP(), []int{0}
}

func (x *ContractDocC) GetContractName() string {
	if x != nil {
		return x.ContractName
	}
	return ""
}

func (x *ContractDocC) GetContractNo() string {
	if x != nil {
		return x.ContractNo
	}
	return ""
}

func (x *ContractDocC) GetContractDate() string {
	if x != nil {
		return x.ContractDate
	}
	return ""
}

func (x *ContractDocC) GetContractExpireDate() string {
	if x != nil {
		return x.ContractExpireDate
	}
	return ""
}

func (x *ContractDocC) GetContractPlace() string {
	if x != nil {
		return x.ContractPlace
	}
	return ""
}

type ContractGetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HtmlUz string `protobuf:"bytes,1,opt,name=HtmlUz,proto3" json:"HtmlUz,omitempty"`
	HtmlRu string `protobuf:"bytes,2,opt,name=HtmlRu,proto3" json:"HtmlRu,omitempty"`
	Sign   string `protobuf:"bytes,3,opt,name=Sign,proto3" json:"Sign,omitempty"`
}

func (x *ContractGetResp) Reset() {
	*x = ContractGetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contractM_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractGetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractGetResp) ProtoMessage() {}

func (x *ContractGetResp) ProtoReflect() protoreflect.Message {
	mi := &file_contractM_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractGetResp.ProtoReflect.Descriptor instead.
func (*ContractGetResp) Descriptor() ([]byte, []int) {
	return file_contractM_proto_rawDescGZIP(), []int{1}
}

func (x *ContractGetResp) GetHtmlUz() string {
	if x != nil {
		return x.HtmlUz
	}
	return ""
}

func (x *ContractGetResp) GetHtmlRu() string {
	if x != nil {
		return x.HtmlRu
	}
	return ""
}

func (x *ContractGetResp) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type ContractM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId  string             `protobuf:"bytes,1,opt,name=ContractId,proto3" json:"ContractId,omitempty"`
	HasVat      bool               `protobuf:"varint,2,opt,name=HasVat,proto3" json:"HasVat,omitempty"`
	ContractDoc *ContractDocC      `protobuf:"bytes,3,opt,name=ContractDoc,proto3" json:"ContractDoc,omitempty"`
	Owner       *ContractPerson    `protobuf:"bytes,4,opt,name=Owner,proto3" json:"Owner,omitempty"`
	Clients     []*ContractPerson  `protobuf:"bytes,5,rep,name=Clients,proto3" json:"Clients,omitempty"`
	Products    []*ContractProduct `protobuf:"bytes,6,rep,name=Products,proto3" json:"Products,omitempty"`
	Parts       []*Part            `protobuf:"bytes,7,rep,name=Parts,proto3" json:"Parts,omitempty"`
}

func (x *ContractM) Reset() {
	*x = ContractM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contractM_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractM) ProtoMessage() {}

func (x *ContractM) ProtoReflect() protoreflect.Message {
	mi := &file_contractM_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractM.ProtoReflect.Descriptor instead.
func (*ContractM) Descriptor() ([]byte, []int) {
	return file_contractM_proto_rawDescGZIP(), []int{2}
}

func (x *ContractM) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *ContractM) GetHasVat() bool {
	if x != nil {
		return x.HasVat
	}
	return false
}

func (x *ContractM) GetContractDoc() *ContractDocC {
	if x != nil {
		return x.ContractDoc
	}
	return nil
}

func (x *ContractM) GetOwner() *ContractPerson {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *ContractM) GetClients() []*ContractPerson {
	if x != nil {
		return x.Clients
	}
	return nil
}

func (x *ContractM) GetProducts() []*ContractProduct {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *ContractM) GetParts() []*Part {
	if x != nil {
		return x.Parts
	}
	return nil
}

type Contract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contract   *ContractM `protobuf:"bytes,1,opt,name=Contract,proto3" json:"Contract,omitempty"`
	Status     string     `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
	Sign       string     `protobuf:"bytes,3,opt,name=Sign,proto3" json:"Sign,omitempty"`
	PageStatus string     `protobuf:"bytes,4,opt,name=PageStatus,proto3" json:"PageStatus,omitempty"`
	CreatedAt  string     `protobuf:"bytes,5,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	PdfUrlUz   string     `protobuf:"bytes,6,opt,name=PdfUrlUz,proto3" json:"PdfUrlUz,omitempty"`
	PdfUrlRu   string     `protobuf:"bytes,7,opt,name=PdfUrlRu,proto3" json:"PdfUrlRu,omitempty"`
	UpdatedAt  string     `protobuf:"bytes,8,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	HtmlUz     string     `protobuf:"bytes,9,opt,name=HtmlUz,proto3" json:"HtmlUz,omitempty"`
	HtmlRu     string     `protobuf:"bytes,10,opt,name=HtmlRu,proto3" json:"HtmlRu,omitempty"`
}

func (x *Contract) Reset() {
	*x = Contract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contractM_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contract) ProtoMessage() {}

func (x *Contract) ProtoReflect() protoreflect.Message {
	mi := &file_contractM_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contract.ProtoReflect.Descriptor instead.
func (*Contract) Descriptor() ([]byte, []int) {
	return file_contractM_proto_rawDescGZIP(), []int{3}
}

func (x *Contract) GetContract() *ContractM {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *Contract) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Contract) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *Contract) GetPageStatus() string {
	if x != nil {
		return x.PageStatus
	}
	return ""
}

func (x *Contract) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Contract) GetPdfUrlUz() string {
	if x != nil {
		return x.PdfUrlUz
	}
	return ""
}

func (x *Contract) GetPdfUrlRu() string {
	if x != nil {
		return x.PdfUrlRu
	}
	return ""
}

func (x *Contract) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Contract) GetHtmlUz() string {
	if x != nil {
		return x.HtmlUz
	}
	return ""
}

func (x *Contract) GetHtmlRu() string {
	if x != nil {
		return x.HtmlRu
	}
	return ""
}

type ContractProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrdNo              string  `protobuf:"bytes,1,opt,name=OrdNo,proto3" json:"OrdNo,omitempty"`
	CatalogCode        string  `protobuf:"bytes,2,opt,name=CatalogCode,proto3" json:"CatalogCode,omitempty"`
	CatalogName        string  `protobuf:"bytes,3,opt,name=CatalogName,proto3" json:"CatalogName,omitempty"`
	BarCode            string  `protobuf:"bytes,4,opt,name=BarCode,proto3" json:"BarCode,omitempty"`
	Name               string  `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`
	MeasureId          string  `protobuf:"bytes,6,opt,name=MeasureId,proto3" json:"MeasureId,omitempty"`
	Count              int32   `protobuf:"varint,7,opt,name=Count,proto3" json:"Count,omitempty"`
	Summa              float32 `protobuf:"fixed32,8,opt,name=Summa,proto3" json:"Summa,omitempty"`
	DeliverySum        float32 `protobuf:"fixed32,9,opt,name=DeliverySum,proto3" json:"DeliverySum,omitempty"`
	VatRate            int32   `protobuf:"varint,10,opt,name=VatRate,proto3" json:"VatRate,omitempty"`
	VatSum             float32 `protobuf:"fixed32,11,opt,name=VatSum,proto3" json:"VatSum,omitempty"`
	DeliverySumWithVat float32 `protobuf:"fixed32,12,opt,name=DeliverySumWithVat,proto3" json:"DeliverySumWithVat,omitempty"`
	WithoutVat         bool    `protobuf:"varint,13,opt,name=WithoutVat,proto3" json:"WithoutVat,omitempty"`
	ContractId         string  `protobuf:"bytes,14,opt,name=ContractId,proto3" json:"ContractId,omitempty"`
	TotalSum           float32 `protobuf:"fixed32,15,opt,name=TotalSum,proto3" json:"TotalSum,omitempty"`
	Index              int32   `protobuf:"varint,16,opt,name=Index,proto3" json:"Index,omitempty"`
}

func (x *ContractProduct) Reset() {
	*x = ContractProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contractM_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractProduct) ProtoMessage() {}

func (x *ContractProduct) ProtoReflect() protoreflect.Message {
	mi := &file_contractM_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractProduct.ProtoReflect.Descriptor instead.
func (*ContractProduct) Descriptor() ([]byte, []int) {
	return file_contractM_proto_rawDescGZIP(), []int{4}
}

func (x *ContractProduct) GetOrdNo() string {
	if x != nil {
		return x.OrdNo
	}
	return ""
}

func (x *ContractProduct) GetCatalogCode() string {
	if x != nil {
		return x.CatalogCode
	}
	return ""
}

func (x *ContractProduct) GetCatalogName() string {
	if x != nil {
		return x.CatalogName
	}
	return ""
}

func (x *ContractProduct) GetBarCode() string {
	if x != nil {
		return x.BarCode
	}
	return ""
}

func (x *ContractProduct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContractProduct) GetMeasureId() string {
	if x != nil {
		return x.MeasureId
	}
	return ""
}

func (x *ContractProduct) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ContractProduct) GetSumma() float32 {
	if x != nil {
		return x.Summa
	}
	return 0
}

func (x *ContractProduct) GetDeliverySum() float32 {
	if x != nil {
		return x.DeliverySum
	}
	return 0
}

func (x *ContractProduct) GetVatRate() int32 {
	if x != nil {
		return x.VatRate
	}
	return 0
}

func (x *ContractProduct) GetVatSum() float32 {
	if x != nil {
		return x.VatSum
	}
	return 0
}

func (x *ContractProduct) GetDeliverySumWithVat() float32 {
	if x != nil {
		return x.DeliverySumWithVat
	}
	return 0
}

func (x *ContractProduct) GetWithoutVat() bool {
	if x != nil {
		return x.WithoutVat
	}
	return false
}

func (x *ContractProduct) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *ContractProduct) GetTotalSum() float32 {
	if x != nil {
		return x.TotalSum
	}
	return 0
}

func (x *ContractProduct) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type ContractPerson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tin        string `protobuf:"bytes,1,opt,name=Tin,proto3" json:"Tin,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Address    string `protobuf:"bytes,3,opt,name=Address,proto3" json:"Address,omitempty"`
	WorkPhone  string `protobuf:"bytes,4,opt,name=WorkPhone,proto3" json:"WorkPhone,omitempty"`
	Mobile     string `protobuf:"bytes,5,opt,name=Mobile,proto3" json:"Mobile,omitempty"`
	Fax        string `protobuf:"bytes,6,opt,name=Fax,proto3" json:"Fax,omitempty"`
	Oked       string `protobuf:"bytes,7,opt,name=Oked,proto3" json:"Oked,omitempty"`
	Account    string `protobuf:"bytes,8,opt,name=Account,proto3" json:"Account,omitempty"`
	BankId     string `protobuf:"bytes,9,opt,name=BankId,proto3" json:"BankId,omitempty"`
	FizTin     string `protobuf:"bytes,10,opt,name=FizTin,proto3" json:"FizTin,omitempty"`
	Fio        string `protobuf:"bytes,11,opt,name=Fio,proto3" json:"Fio,omitempty"`
	BranchCode string `protobuf:"bytes,12,opt,name=BranchCode,proto3" json:"BranchCode,omitempty"`
	BranchName string `protobuf:"bytes,13,opt,name=BranchName,proto3" json:"BranchName,omitempty"`
	ContractId string `protobuf:"bytes,14,opt,name=ContractId,proto3" json:"ContractId,omitempty"`
	Status     bool   `protobuf:"varint,15,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *ContractPerson) Reset() {
	*x = ContractPerson{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contractM_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractPerson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractPerson) ProtoMessage() {}

func (x *ContractPerson) ProtoReflect() protoreflect.Message {
	mi := &file_contractM_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractPerson.ProtoReflect.Descriptor instead.
func (*ContractPerson) Descriptor() ([]byte, []int) {
	return file_contractM_proto_rawDescGZIP(), []int{5}
}

func (x *ContractPerson) GetTin() string {
	if x != nil {
		return x.Tin
	}
	return ""
}

func (x *ContractPerson) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContractPerson) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ContractPerson) GetWorkPhone() string {
	if x != nil {
		return x.WorkPhone
	}
	return ""
}

func (x *ContractPerson) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *ContractPerson) GetFax() string {
	if x != nil {
		return x.Fax
	}
	return ""
}

func (x *ContractPerson) GetOked() string {
	if x != nil {
		return x.Oked
	}
	return ""
}

func (x *ContractPerson) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ContractPerson) GetBankId() string {
	if x != nil {
		return x.BankId
	}
	return ""
}

func (x *ContractPerson) GetFizTin() string {
	if x != nil {
		return x.FizTin
	}
	return ""
}

func (x *ContractPerson) GetFio() string {
	if x != nil {
		return x.Fio
	}
	return ""
}

func (x *ContractPerson) GetBranchCode() string {
	if x != nil {
		return x.BranchCode
	}
	return ""
}

func (x *ContractPerson) GetBranchName() string {
	if x != nil {
		return x.BranchName
	}
	return ""
}

func (x *ContractPerson) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *ContractPerson) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type Part struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrdNo      string `protobuf:"bytes,1,opt,name=OrdNo,proto3" json:"OrdNo,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Body       string `protobuf:"bytes,3,opt,name=Body,proto3" json:"Body,omitempty"`
	ContractId string `protobuf:"bytes,4,opt,name=ContractId,proto3" json:"ContractId,omitempty"`
}

func (x *Part) Reset() {
	*x = Part{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contractM_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Part) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Part) ProtoMessage() {}

func (x *Part) ProtoReflect() protoreflect.Message {
	mi := &file_contractM_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Part.ProtoReflect.Descriptor instead.
func (*Part) Descriptor() ([]byte, []int) {
	return file_contractM_proto_rawDescGZIP(), []int{6}
}

func (x *Part) GetOrdNo() string {
	if x != nil {
		return x.OrdNo
	}
	return ""
}

func (x *Part) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Part) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Part) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

var File_contractM_proto protoreflect.FileDescriptor

var file_contractM_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x16, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xcc, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x44, 0x6f, 0x63, 0x43, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x12,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x22, 0x55, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x74, 0x6d, 0x6c, 0x55, 0x7a, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x48, 0x74, 0x6d, 0x6c, 0x55, 0x7a, 0x12, 0x16, 0x0a,
	0x06, 0x48, 0x74, 0x6d, 0x6c, 0x52, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x48,
	0x74, 0x6d, 0x6c, 0x52, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x22, 0x84, 0x03, 0x0a, 0x09, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x61, 0x73, 0x56, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x48, 0x61, 0x73, 0x56, 0x61, 0x74, 0x12,
	0x46, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x44, 0x6f, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x44, 0x6f, 0x63, 0x43, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x44, 0x6f, 0x63, 0x12, 0x3c, 0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x05,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x07, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x07,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x43, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x6f, 0x6e, 0x67,
	0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x05,
	0x50, 0x61, 0x72, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f,
	0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x05, 0x50, 0x61, 0x72, 0x74, 0x73,
	0x22, 0xb9, 0x02, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x3d, 0x0a,
	0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x4d, 0x52, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x61,
	0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x64, 0x66, 0x55, 0x72, 0x6c,
	0x55, 0x7a, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x64, 0x66, 0x55, 0x72, 0x6c,
	0x55, 0x7a, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x64, 0x66, 0x55, 0x72, 0x6c, 0x52, 0x75, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x64, 0x66, 0x55, 0x72, 0x6c, 0x52, 0x75, 0x12, 0x1c,
	0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x48, 0x74, 0x6d, 0x6c, 0x55, 0x7a, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x48, 0x74,
	0x6d, 0x6c, 0x55, 0x7a, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x74, 0x6d, 0x6c, 0x52, 0x75, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x48, 0x74, 0x6d, 0x6c, 0x52, 0x75, 0x22, 0xd9, 0x03, 0x0a,
	0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x4f, 0x72, 0x64, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x61,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x61, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x75,
	0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x53, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x61, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x56, 0x61, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x56, 0x61, 0x74, 0x53, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x56, 0x61, 0x74, 0x53, 0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x53, 0x75, 0x6d, 0x57, 0x69, 0x74, 0x68, 0x56, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x12, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x75, 0x6d, 0x57,
	0x69, 0x74, 0x68, 0x56, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75,
	0x74, 0x56, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x57, 0x69, 0x74, 0x68,
	0x6f, 0x75, 0x74, 0x56, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x75, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x80, 0x03, 0x0a, 0x0e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x54,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x69, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x57,
	0x6f, 0x72, 0x6b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x57, 0x6f, 0x72, 0x6b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x46, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x46, 0x61, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x6b, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4f, 0x6b, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x42, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x7a,
	0x54, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x7a, 0x54, 0x69,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x46, 0x69, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x46, 0x69, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x66, 0x0a, 0x04, 0x50,
	0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x4f, 0x72, 0x64, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x49, 0x64, 0x32, 0xb9, 0x02, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x06, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x12, 0x20, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f,
	0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x20, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x2e, 0x6d, 0x6f, 0x6e,
	0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42,
	0x21, 0x5a, 0x1f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x6e, 0x67,
	0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contractM_proto_rawDescOnce sync.Once
	file_contractM_proto_rawDescData = file_contractM_proto_rawDesc
)

func file_contractM_proto_rawDescGZIP() []byte {
	file_contractM_proto_rawDescOnce.Do(func() {
		file_contractM_proto_rawDescData = protoimpl.X.CompressGZIP(file_contractM_proto_rawDescData)
	})
	return file_contractM_proto_rawDescData
}

var file_contractM_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_contractM_proto_goTypes = []interface{}{
	(*ContractDocC)(nil),    // 0: mongo_document_service.ContractDocC
	(*ContractGetResp)(nil), // 1: mongo_document_service.ContractGetResp
	(*ContractM)(nil),       // 2: mongo_document_service.ContractM
	(*Contract)(nil),        // 3: mongo_document_service.Contract
	(*ContractProduct)(nil), // 4: mongo_document_service.ContractProduct
	(*ContractPerson)(nil),  // 5: mongo_document_service.ContractPerson
	(*Part)(nil),            // 6: mongo_document_service.Part
	(*ById)(nil),            // 7: mongo_document_service.ById
	(*UpdateStatusReq)(nil), // 8: mongo_document_service.UpdateStatusReq
	(*emptypb.Empty)(nil),   // 9: google.protobuf.Empty
}
var file_contractM_proto_depIdxs = []int32{
	0,  // 0: mongo_document_service.ContractM.ContractDoc:type_name -> mongo_document_service.ContractDocC
	5,  // 1: mongo_document_service.ContractM.Owner:type_name -> mongo_document_service.ContractPerson
	5,  // 2: mongo_document_service.ContractM.Clients:type_name -> mongo_document_service.ContractPerson
	4,  // 3: mongo_document_service.ContractM.Products:type_name -> mongo_document_service.ContractProduct
	6,  // 4: mongo_document_service.ContractM.Parts:type_name -> mongo_document_service.Part
	2,  // 5: mongo_document_service.Contract.Contract:type_name -> mongo_document_service.ContractM
	3,  // 6: mongo_document_service.ContractService.Upsert:input_type -> mongo_document_service.Contract
	7,  // 7: mongo_document_service.ContractService.GetById:input_type -> mongo_document_service.ById
	8,  // 8: mongo_document_service.ContractService.UpdateStatus:input_type -> mongo_document_service.UpdateStatusReq
	7,  // 9: mongo_document_service.ContractService.Delete:input_type -> mongo_document_service.ById
	9,  // 10: mongo_document_service.ContractService.Upsert:output_type -> google.protobuf.Empty
	3,  // 11: mongo_document_service.ContractService.GetById:output_type -> mongo_document_service.Contract
	9,  // 12: mongo_document_service.ContractService.UpdateStatus:output_type -> google.protobuf.Empty
	9,  // 13: mongo_document_service.ContractService.Delete:output_type -> google.protobuf.Empty
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_contractM_proto_init() }
func file_contractM_proto_init() {
	if File_contractM_proto != nil {
		return
	}
	file_mongo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_contractM_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractDocC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contractM_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractGetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contractM_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contractM_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contractM_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contractM_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractPerson); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contractM_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Part); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contractM_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_contractM_proto_goTypes,
		DependencyIndexes: file_contractM_proto_depIdxs,
		MessageInfos:      file_contractM_proto_msgTypes,
	}.Build()
	File_contractM_proto = out.File
	file_contractM_proto_rawDesc = nil
	file_contractM_proto_goTypes = nil
	file_contractM_proto_depIdxs = nil
}
