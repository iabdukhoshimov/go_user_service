// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: verificationActMongo.proto

package mongo_document_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VAct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerificationActId        string                      `protobuf:"bytes,1,opt,name=VerificationActId,proto3" json:"VerificationActId,omitempty"`
	VerificationActDoc       *VerificationActDoc         `protobuf:"bytes,2,opt,name=VerificationActDoc,proto3" json:"VerificationActDoc,omitempty"`
	OwnerTin                 string                      `protobuf:"bytes,3,opt,name=OwnerTin,proto3" json:"OwnerTin,omitempty"`
	OwnerName                string                      `protobuf:"bytes,4,opt,name=OwnerName,proto3" json:"OwnerName,omitempty"`
	OwnerFizTin              string                      `protobuf:"bytes,5,opt,name=OwnerFizTin,proto3" json:"OwnerFizTin,omitempty"`
	OwnerFizFio              string                      `protobuf:"bytes,6,opt,name=OwnerFizFio,proto3" json:"OwnerFizFio,omitempty"`
	PartnerTin               string                      `protobuf:"bytes,7,opt,name=PartnerTin,proto3" json:"PartnerTin,omitempty"`
	PartnerName              string                      `protobuf:"bytes,8,opt,name=PartnerName,proto3" json:"PartnerName,omitempty"`
	PartnerFizTin            string                      `protobuf:"bytes,9,opt,name=PartnerFizTin,proto3" json:"PartnerFizTin,omitempty"`
	PartnerFizFio            string                      `protobuf:"bytes,10,opt,name=PartnerFizFio,proto3" json:"PartnerFizFio,omitempty"`
	VerificationActContracts []*VerificationActContracts `protobuf:"bytes,11,rep,name=VerificationActContracts,proto3" json:"VerificationActContracts,omitempty"`
	OpenBalance              *Balance                    `protobuf:"bytes,12,opt,name=OpenBalance,proto3" json:"OpenBalance,omitempty"`
	TotalBalance             *Balance                    `protobuf:"bytes,13,opt,name=TotalBalance,proto3" json:"TotalBalance,omitempty"`
	CloseBalance             *Balance                    `protobuf:"bytes,14,opt,name=CloseBalance,proto3" json:"CloseBalance,omitempty"`
	TurnoverBalance          *Balance                    `protobuf:"bytes,15,opt,name=TurnoverBalance,proto3" json:"TurnoverBalance,omitempty"`
}

func (x *VAct) Reset() {
	*x = VAct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_verificationActMongo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VAct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VAct) ProtoMessage() {}

func (x *VAct) ProtoReflect() protoreflect.Message {
	mi := &file_verificationActMongo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VAct.ProtoReflect.Descriptor instead.
func (*VAct) Descriptor() ([]byte, []int) {
	return file_verificationActMongo_proto_rawDescGZIP(), []int{0}
}

func (x *VAct) GetVerificationActId() string {
	if x != nil {
		return x.VerificationActId
	}
	return ""
}

func (x *VAct) GetVerificationActDoc() *VerificationActDoc {
	if x != nil {
		return x.VerificationActDoc
	}
	return nil
}

func (x *VAct) GetOwnerTin() string {
	if x != nil {
		return x.OwnerTin
	}
	return ""
}

func (x *VAct) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *VAct) GetOwnerFizTin() string {
	if x != nil {
		return x.OwnerFizTin
	}
	return ""
}

func (x *VAct) GetOwnerFizFio() string {
	if x != nil {
		return x.OwnerFizFio
	}
	return ""
}

func (x *VAct) GetPartnerTin() string {
	if x != nil {
		return x.PartnerTin
	}
	return ""
}

func (x *VAct) GetPartnerName() string {
	if x != nil {
		return x.PartnerName
	}
	return ""
}

func (x *VAct) GetPartnerFizTin() string {
	if x != nil {
		return x.PartnerFizTin
	}
	return ""
}

func (x *VAct) GetPartnerFizFio() string {
	if x != nil {
		return x.PartnerFizFio
	}
	return ""
}

func (x *VAct) GetVerificationActContracts() []*VerificationActContracts {
	if x != nil {
		return x.VerificationActContracts
	}
	return nil
}

func (x *VAct) GetOpenBalance() *Balance {
	if x != nil {
		return x.OpenBalance
	}
	return nil
}

func (x *VAct) GetTotalBalance() *Balance {
	if x != nil {
		return x.TotalBalance
	}
	return nil
}

func (x *VAct) GetCloseBalance() *Balance {
	if x != nil {
		return x.CloseBalance
	}
	return nil
}

func (x *VAct) GetTurnoverBalance() *Balance {
	if x != nil {
		return x.TurnoverBalance
	}
	return nil
}

type VerificationAct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerificationAct *VAct  `protobuf:"bytes,1,opt,name=VerificationAct,proto3" json:"VerificationAct,omitempty"`
	Sign            string `protobuf:"bytes,2,opt,name=Sign,proto3" json:"Sign,omitempty"`
	Status          string `protobuf:"bytes,3,opt,name=Status,proto3" json:"Status,omitempty"`
	PdfUrl          string `protobuf:"bytes,4,opt,name=PdfUrl,proto3" json:"PdfUrl,omitempty"`
	PdfUrlRu        string `protobuf:"bytes,5,opt,name=PdfUrlRu,proto3" json:"PdfUrlRu,omitempty"`
	PageStatus      string `protobuf:"bytes,6,opt,name=PageStatus,proto3" json:"PageStatus,omitempty"`
	CreatedAt       string `protobuf:"bytes,7,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt       string `protobuf:"bytes,8,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	HtmlUz          string `protobuf:"bytes,9,opt,name=HtmlUz,proto3" json:"HtmlUz,omitempty"`
	HtmlRu          string `protobuf:"bytes,10,opt,name=HtmlRu,proto3" json:"HtmlRu,omitempty"`
}

func (x *VerificationAct) Reset() {
	*x = VerificationAct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_verificationActMongo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationAct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationAct) ProtoMessage() {}

func (x *VerificationAct) ProtoReflect() protoreflect.Message {
	mi := &file_verificationActMongo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationAct.ProtoReflect.Descriptor instead.
func (*VerificationAct) Descriptor() ([]byte, []int) {
	return file_verificationActMongo_proto_rawDescGZIP(), []int{1}
}

func (x *VerificationAct) GetVerificationAct() *VAct {
	if x != nil {
		return x.VerificationAct
	}
	return nil
}

func (x *VerificationAct) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *VerificationAct) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *VerificationAct) GetPdfUrl() string {
	if x != nil {
		return x.PdfUrl
	}
	return ""
}

func (x *VerificationAct) GetPdfUrlRu() string {
	if x != nil {
		return x.PdfUrlRu
	}
	return ""
}

func (x *VerificationAct) GetPageStatus() string {
	if x != nil {
		return x.PageStatus
	}
	return ""
}

func (x *VerificationAct) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *VerificationAct) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *VerificationAct) GetHtmlUz() string {
	if x != nil {
		return x.HtmlUz
	}
	return ""
}

func (x *VerificationAct) GetHtmlRu() string {
	if x != nil {
		return x.HtmlRu
	}
	return ""
}

type VerificationActDoc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerificationActNo   string `protobuf:"bytes,1,opt,name=VerificationActNo,proto3" json:"VerificationActNo,omitempty"`
	VerificationActDate string `protobuf:"bytes,2,opt,name=VerificationActDate,proto3" json:"VerificationActDate,omitempty"`
	VerificationActText string `protobuf:"bytes,3,opt,name=VerificationActText,proto3" json:"VerificationActText,omitempty"`
}

func (x *VerificationActDoc) Reset() {
	*x = VerificationActDoc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_verificationActMongo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationActDoc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationActDoc) ProtoMessage() {}

func (x *VerificationActDoc) ProtoReflect() protoreflect.Message {
	mi := &file_verificationActMongo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationActDoc.ProtoReflect.Descriptor instead.
func (*VerificationActDoc) Descriptor() ([]byte, []int) {
	return file_verificationActMongo_proto_rawDescGZIP(), []int{2}
}

func (x *VerificationActDoc) GetVerificationActNo() string {
	if x != nil {
		return x.VerificationActNo
	}
	return ""
}

func (x *VerificationActDoc) GetVerificationActDate() string {
	if x != nil {
		return x.VerificationActDate
	}
	return ""
}

func (x *VerificationActDoc) GetVerificationActText() string {
	if x != nil {
		return x.VerificationActText
	}
	return ""
}

type VerificationActContracts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractNo                   string                          `protobuf:"bytes,1,opt,name=ContractNo,proto3" json:"ContractNo,omitempty"`
	ContractDate                 string                          `protobuf:"bytes,2,opt,name=ContractDate,proto3" json:"ContractDate,omitempty"`
	VerificationActContractItems []*VerificationActContractItems `protobuf:"bytes,3,rep,name=VerificationActContractItems,proto3" json:"VerificationActContractItems,omitempty"`
	OpenBalance                  *Balance                        `protobuf:"bytes,4,opt,name=OpenBalance,proto3" json:"OpenBalance,omitempty"`
	CloseBalance                 *Balance                        `protobuf:"bytes,5,opt,name=CloseBalance,proto3" json:"CloseBalance,omitempty"`
	TotalBalance                 *Balance                        `protobuf:"bytes,6,opt,name=TotalBalance,proto3" json:"TotalBalance,omitempty"`
}

func (x *VerificationActContracts) Reset() {
	*x = VerificationActContracts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_verificationActMongo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationActContracts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationActContracts) ProtoMessage() {}

func (x *VerificationActContracts) ProtoReflect() protoreflect.Message {
	mi := &file_verificationActMongo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationActContracts.ProtoReflect.Descriptor instead.
func (*VerificationActContracts) Descriptor() ([]byte, []int) {
	return file_verificationActMongo_proto_rawDescGZIP(), []int{3}
}

func (x *VerificationActContracts) GetContractNo() string {
	if x != nil {
		return x.ContractNo
	}
	return ""
}

func (x *VerificationActContracts) GetContractDate() string {
	if x != nil {
		return x.ContractDate
	}
	return ""
}

func (x *VerificationActContracts) GetVerificationActContractItems() []*VerificationActContractItems {
	if x != nil {
		return x.VerificationActContractItems
	}
	return nil
}

func (x *VerificationActContracts) GetOpenBalance() *Balance {
	if x != nil {
		return x.OpenBalance
	}
	return nil
}

func (x *VerificationActContracts) GetCloseBalance() *Balance {
	if x != nil {
		return x.CloseBalance
	}
	return nil
}

func (x *VerificationActContracts) GetTotalBalance() *Balance {
	if x != nil {
		return x.TotalBalance
	}
	return nil
}

type VerificationActContractItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerOperationDate   string `protobuf:"bytes,1,opt,name=OwnerOperationDate,proto3" json:"OwnerOperationDate,omitempty"`
	OwnerOperationName   string `protobuf:"bytes,2,opt,name=OwnerOperationName,proto3" json:"OwnerOperationName,omitempty"`
	OwnerDebit           string `protobuf:"bytes,3,opt,name=OwnerDebit,proto3" json:"OwnerDebit,omitempty"`
	OwnerCredit          string `protobuf:"bytes,4,opt,name=OwnerCredit,proto3" json:"OwnerCredit,omitempty"`
	PartnerOperationDate string `protobuf:"bytes,5,opt,name=PartnerOperationDate,proto3" json:"PartnerOperationDate,omitempty"`
	PartnerOperationName string `protobuf:"bytes,6,opt,name=PartnerOperationName,proto3" json:"PartnerOperationName,omitempty"`
	PartnerDebit         string `protobuf:"bytes,7,opt,name=PartnerDebit,proto3" json:"PartnerDebit,omitempty"`
	PartnerCredit        string `protobuf:"bytes,8,opt,name=PartnerCredit,proto3" json:"PartnerCredit,omitempty"`
}

func (x *VerificationActContractItems) Reset() {
	*x = VerificationActContractItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_verificationActMongo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationActContractItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationActContractItems) ProtoMessage() {}

func (x *VerificationActContractItems) ProtoReflect() protoreflect.Message {
	mi := &file_verificationActMongo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationActContractItems.ProtoReflect.Descriptor instead.
func (*VerificationActContractItems) Descriptor() ([]byte, []int) {
	return file_verificationActMongo_proto_rawDescGZIP(), []int{4}
}

func (x *VerificationActContractItems) GetOwnerOperationDate() string {
	if x != nil {
		return x.OwnerOperationDate
	}
	return ""
}

func (x *VerificationActContractItems) GetOwnerOperationName() string {
	if x != nil {
		return x.OwnerOperationName
	}
	return ""
}

func (x *VerificationActContractItems) GetOwnerDebit() string {
	if x != nil {
		return x.OwnerDebit
	}
	return ""
}

func (x *VerificationActContractItems) GetOwnerCredit() string {
	if x != nil {
		return x.OwnerCredit
	}
	return ""
}

func (x *VerificationActContractItems) GetPartnerOperationDate() string {
	if x != nil {
		return x.PartnerOperationDate
	}
	return ""
}

func (x *VerificationActContractItems) GetPartnerOperationName() string {
	if x != nil {
		return x.PartnerOperationName
	}
	return ""
}

func (x *VerificationActContractItems) GetPartnerDebit() string {
	if x != nil {
		return x.PartnerDebit
	}
	return ""
}

func (x *VerificationActContractItems) GetPartnerCredit() string {
	if x != nil {
		return x.PartnerCredit
	}
	return ""
}

type Balance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerDebit    string `protobuf:"bytes,1,opt,name=OwnerDebit,proto3" json:"OwnerDebit,omitempty"`
	OwnerCredit   string `protobuf:"bytes,2,opt,name=OwnerCredit,proto3" json:"OwnerCredit,omitempty"`
	PartnerCredit string `protobuf:"bytes,3,opt,name=PartnerCredit,proto3" json:"PartnerCredit,omitempty"`
	PartnerDebit  string `protobuf:"bytes,4,opt,name=PartnerDebit,proto3" json:"PartnerDebit,omitempty"`
}

func (x *Balance) Reset() {
	*x = Balance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_verificationActMongo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance) ProtoMessage() {}

func (x *Balance) ProtoReflect() protoreflect.Message {
	mi := &file_verificationActMongo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance.ProtoReflect.Descriptor instead.
func (*Balance) Descriptor() ([]byte, []int) {
	return file_verificationActMongo_proto_rawDescGZIP(), []int{5}
}

func (x *Balance) GetOwnerDebit() string {
	if x != nil {
		return x.OwnerDebit
	}
	return ""
}

func (x *Balance) GetOwnerCredit() string {
	if x != nil {
		return x.OwnerCredit
	}
	return ""
}

func (x *Balance) GetPartnerCredit() string {
	if x != nil {
		return x.PartnerCredit
	}
	return ""
}

func (x *Balance) GetPartnerDebit() string {
	if x != nil {
		return x.PartnerDebit
	}
	return ""
}

var File_verificationActMongo_proto protoreflect.FileDescriptor

var file_verificationActMongo_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63,
	0x74, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x6d, 0x6f,
	0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0b, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2,
	0x06, 0x0a, 0x04, 0x56, 0x41, 0x63, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x63, 0x74, 0x49, 0x64, 0x12, 0x5a, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x44, 0x6f, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x44, 0x6f, 0x63, 0x52, 0x12, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x44, 0x6f,
	0x63, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x69, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x69, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x46, 0x69, 0x7a, 0x54, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x46, 0x69, 0x7a, 0x54, 0x69, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x46, 0x69, 0x7a, 0x46, 0x69, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x46, 0x69, 0x7a, 0x46, 0x69, 0x6f, 0x12,
	0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x54, 0x69, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x54, 0x69, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x46, 0x69, 0x7a, 0x54,
	0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x46, 0x69, 0x7a, 0x54, 0x69, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x46, 0x69, 0x7a, 0x46, 0x69, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x46, 0x69, 0x7a, 0x46, 0x69, 0x6f, 0x12, 0x6c, 0x0a,
	0x18, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x52, 0x18, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x12, 0x41, 0x0a, 0x0b, 0x4f,
	0x70, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x43,
	0x0a, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x6e, 0x67,
	0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0c, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0f, 0x54, 0x75, 0x72, 0x6e,
	0x6f, 0x76, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x0f, 0x54, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x22, 0xc5, 0x02, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x12, 0x46, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x41, 0x63, 0x74, 0x52, 0x0f,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53,
	0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x50,
	0x64, 0x66, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x64, 0x66,
	0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x64, 0x66, 0x55, 0x72, 0x6c, 0x52, 0x75, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x64, 0x66, 0x55, 0x72, 0x6c, 0x52, 0x75, 0x12,
	0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x48,
	0x74, 0x6d, 0x6c, 0x55, 0x7a, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x48, 0x74, 0x6d,
	0x6c, 0x55, 0x7a, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x74, 0x6d, 0x6c, 0x52, 0x75, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x48, 0x74, 0x6d, 0x6c, 0x52, 0x75, 0x22, 0xa6, 0x01, 0x0a, 0x12,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x44,
	0x6f, 0x63, 0x12, 0x2c, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x63, 0x74, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x4e, 0x6f,
	0x12, 0x30, 0x0a, 0x13, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x63, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x63, 0x74, 0x54, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x22, 0xa5, 0x03, 0x0a, 0x18, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e,
	0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x78, 0x0a, 0x1c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6d, 0x6f,
	0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x52, 0x1c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x41, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f,
	0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0c,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xf2, 0x02, 0x0a,
	0x1c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2e, 0x0a,
	0x12, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a,
	0x12, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x62, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x62, 0x69, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12,
	0x32, 0x0a, 0x14, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x50,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x44, 0x65, 0x62, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x62, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x50,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x22, 0x95, 0x01, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x62, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x62, 0x69, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x44, 0x65, 0x62, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x62, 0x69, 0x74, 0x32, 0xca, 0x02, 0x0a, 0x16, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x06, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x12, 0x27,
	0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x4e, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f,
	0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x27, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x22,
	0x00, 0x12, 0x40, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x6d, 0x6f,
	0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x27, 0x2e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x21, 0x5a, 0x1f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_verificationActMongo_proto_rawDescOnce sync.Once
	file_verificationActMongo_proto_rawDescData = file_verificationActMongo_proto_rawDesc
)

func file_verificationActMongo_proto_rawDescGZIP() []byte {
	file_verificationActMongo_proto_rawDescOnce.Do(func() {
		file_verificationActMongo_proto_rawDescData = protoimpl.X.CompressGZIP(file_verificationActMongo_proto_rawDescData)
	})
	return file_verificationActMongo_proto_rawDescData
}

var file_verificationActMongo_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_verificationActMongo_proto_goTypes = []interface{}{
	(*VAct)(nil),                         // 0: mongo_document_service.VAct
	(*VerificationAct)(nil),              // 1: mongo_document_service.VerificationAct
	(*VerificationActDoc)(nil),           // 2: mongo_document_service.VerificationActDoc
	(*VerificationActContracts)(nil),     // 3: mongo_document_service.VerificationActContracts
	(*VerificationActContractItems)(nil), // 4: mongo_document_service.VerificationActContractItems
	(*Balance)(nil),                      // 5: mongo_document_service.Balance
	(*ById)(nil),                         // 6: mongo_document_service.ById
	(*UpdateStatusReq)(nil),              // 7: mongo_document_service.UpdateStatusReq
	(*emptypb.Empty)(nil),                // 8: google.protobuf.Empty
}
var file_verificationActMongo_proto_depIdxs = []int32{
	2,  // 0: mongo_document_service.VAct.VerificationActDoc:type_name -> mongo_document_service.VerificationActDoc
	3,  // 1: mongo_document_service.VAct.VerificationActContracts:type_name -> mongo_document_service.VerificationActContracts
	5,  // 2: mongo_document_service.VAct.OpenBalance:type_name -> mongo_document_service.Balance
	5,  // 3: mongo_document_service.VAct.TotalBalance:type_name -> mongo_document_service.Balance
	5,  // 4: mongo_document_service.VAct.CloseBalance:type_name -> mongo_document_service.Balance
	5,  // 5: mongo_document_service.VAct.TurnoverBalance:type_name -> mongo_document_service.Balance
	0,  // 6: mongo_document_service.VerificationAct.VerificationAct:type_name -> mongo_document_service.VAct
	4,  // 7: mongo_document_service.VerificationActContracts.VerificationActContractItems:type_name -> mongo_document_service.VerificationActContractItems
	5,  // 8: mongo_document_service.VerificationActContracts.OpenBalance:type_name -> mongo_document_service.Balance
	5,  // 9: mongo_document_service.VerificationActContracts.CloseBalance:type_name -> mongo_document_service.Balance
	5,  // 10: mongo_document_service.VerificationActContracts.TotalBalance:type_name -> mongo_document_service.Balance
	1,  // 11: mongo_document_service.VerificationActService.Upsert:input_type -> mongo_document_service.VerificationAct
	6,  // 12: mongo_document_service.VerificationActService.Get:input_type -> mongo_document_service.ById
	6,  // 13: mongo_document_service.VerificationActService.Delete:input_type -> mongo_document_service.ById
	7,  // 14: mongo_document_service.VerificationActService.UpdateStatus:input_type -> mongo_document_service.UpdateStatusReq
	8,  // 15: mongo_document_service.VerificationActService.Upsert:output_type -> google.protobuf.Empty
	1,  // 16: mongo_document_service.VerificationActService.Get:output_type -> mongo_document_service.VerificationAct
	8,  // 17: mongo_document_service.VerificationActService.Delete:output_type -> google.protobuf.Empty
	8,  // 18: mongo_document_service.VerificationActService.UpdateStatus:output_type -> google.protobuf.Empty
	15, // [15:19] is the sub-list for method output_type
	11, // [11:15] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_verificationActMongo_proto_init() }
func file_verificationActMongo_proto_init() {
	if File_verificationActMongo_proto != nil {
		return
	}
	file_mongo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_verificationActMongo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VAct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_verificationActMongo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationAct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_verificationActMongo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationActDoc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_verificationActMongo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationActContracts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_verificationActMongo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationActContractItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_verificationActMongo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Balance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_verificationActMongo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_verificationActMongo_proto_goTypes,
		DependencyIndexes: file_verificationActMongo_proto_depIdxs,
		MessageInfos:      file_verificationActMongo_proto_msgTypes,
	}.Build()
	File_verificationActMongo_proto = out.File
	file_verificationActMongo_proto_rawDesc = nil
	file_verificationActMongo_proto_goTypes = nil
	file_verificationActMongo_proto_depIdxs = nil
}
