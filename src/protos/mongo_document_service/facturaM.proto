syntax="proto3";

package mongo_document_service;
option go_package="genproto/mongo_document_service";

import "google/protobuf/empty.proto";
import "mongo.proto";
import "google/protobuf/wrappers.proto";
import "bFactura.proto";

service FacturaService {
    rpc Upsert(Factura) returns (google.protobuf.Empty) {}
    rpc Get(ById) returns (Factura) {}
    rpc Delete(ById) returns (google.protobuf.Empty) {}
    rpc UpdateStatus(UpdateStatusReq) returns (google.protobuf.Empty) {}
}
message FacturaMongo {
    int32 Version = 1;
    int32 FacturaType = 2;
    int32 SingleSidedType = 3;
    bool HasMarking = 4;
    string FacturaId = 5;
    FacturaDoc FacturaDoc = 6;
    OldFacturaDoc OldFacturaDoc = 7;
    ContractDoc ContractDoc = 8;
    FacturaEmpowermentDoc FacturaEmpowermentDoc = 9;
    ItemReleasedDoc ItemReleasedDoc = 10;
    string SellerTin = 11;
    string BuyerTin = 12;
    Client Seller = 13;
    Client Buyer = 14;
    ForeignCompany ForeignCompany = 15;
    ProductListFac ProductList = 16;
    int32 IncomeType = 17;
    string LotId = 18;
    string ContractId = 19;
    string WaybillId = 20;
    string Status = 21;
}
message Factura {
    FacturaMongo Factura = 1;
    string PdfUrlUz = 2;
    string PdfUrlRu = 3;
    string Status = 4;
    string PageStatus = 5;
    string CreatedAt = 6;
    string UpdatedAt = 7;
    string Sign = 8;
    string HtmlUz = 9;
    string HtmlRu = 10;
}

message FacturaDoc {
    string FacturaNo = 1;
    string FacturaDate = 2;
}

message OldFacturaDoc {
    string OldFacturaId = 1;
    string OldFacturaNo = 2;
    string OldFacturaDate = 3;
}

message FacturaEmpowermentDoc {
    string EmpowermentNo = 1;
    string EmpowermentDateOfIssue = 2;
    string AgentFacturaId = 3;
    string AgentFio = 4;
    string AgentPinfl = 5;
}

message ItemReleasedDoc {
    string ItemReleasedFio = 1;
    string ItemReleasedPinfl = 2;
}

message ForeignCompany {
    string CountryId = 1;
    string Name = 2;
    string Address = 3;
    string Bank = 4;
    string Account = 5;
}

message ProductListFac {
    string FacturaProductId = 1;
    string Tin = 2;
    bool HasExcise = 3;
    bool HasVat = 4;
    bool HasCommittent = 5;
    bool HasLgota = 6;
    bool HasMedical = 7;
    bool HideReportCommittent = 8;
    repeated FacturaProducts Products = 9;
}

message FacturaProducts {
    int32 Index = 1;
    string OrdNo = 2;
    string CommittentName = 3;
    string CommittentTin = 4;
    string CommittentVatRegCode = 5;
    string CatalogCode = 6;
    string CatalogName = 7;
    string Barcode = 8;
    string Name = 9;
    string Serial = 10;
    string MeasureId = 11;
    float BaseSumma = 12;
    float ProfitRate = 13;
    float Count = 14;
    float Summa = 15;
    float DeliverySum = 16;
    float ExciseRate = 17;
    float ExciseSum = 18;
    float VatRate = 19;
    float VatSum = 20;
    float DeliverySumWithVat = 21;
    bool WithoutVat = 22;
    string PackageCode = 23;
    string PackageName = 24;
    google.protobuf.Int32Value LgotaId = 25;
    google.protobuf.Int32Value CommittentVatRegStatus = 26;
    Marks Marks = 27;
    ExchangeInfo ExchangeInfo = 28;
    string MeasureName = 29;
}

message Marks {
    int32 ProductType = 1;
    repeated string Kiz = 2;
    repeated string NomUpak = 3;
    repeated string IdentTransUpak = 4;
}

message ExchangeInfo {
    string ProductCode = 1;
    string ProductProperties = 2;
    int32 PlanPositionId = 3;
}
